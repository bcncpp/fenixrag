[project]
name = "fenix"
version = "0.1.0"
description = "Simple RAG for applicaton"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "google-generativeai>=0.7.0",
    "sqlalchemy==2.0.23",
    "asyncpg==0.29.0",
    "psycopg2-binary==2.9.9",
    "pgvector==0.2.4",
    "python-dotenv==1.0.0",
    "langchain>=0.0.27",
    "langchain-community>=0.2.5",
    "langchain-core>=0.2.8",
    "langchain-google-genai>=2.0.10",
    "typer>=0.16.0",
    "tenacity>=9.1.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "coverage>=7.9.1",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.12.1",
    "bandit>=1.8.5",
    "coverage-badge>=1.1.2",
]

[project.scripts]
fenix = "fenix.main:app"

[tool.ruff]
target-version = "py310" 
line-length = 110

[tool.ruff.lint]
select = [
    "E",    # pycodestyle (PEP 8)
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "D",    # pydocstyle
    "UP",   # pyupgrade
    "C90",  # mccabe complexity
    "PL",   # pylint (selective usage)
]

# Ignore rules that conflict with Google style or are overly strict
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D107",  # Missing docstring in __init__
    "E203",  # Whitespace before ':' (conflicts with black)
    "PLR2004",  # Magic value used in comparison
    "PLR0913",  # Too many arguments in function
]

# Isort options
[tool.ruff.lint.isort]
known-first-party = ["your_package_name"]
combine-as-imports = true

# Docstring style enforcement
[tool.ruff.lint.pydocstyle]
convention = "google"

# Complexity
[tool.ruff.lint.mccabe]
max-complexity = 10
